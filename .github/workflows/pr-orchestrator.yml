name: PR Orchestrator

on:
  pull_request:
    branches: [main, master]

jobs:
  pr-checks:
    name: Run Tests and Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pyyaml jsonschema click openpyxl
        pip install -e .

    - name: Install cdlreq
      run: |
        git clone https://github.com/SeanHgh/cdlreq.git /tmp/cdlreq
        cd /tmp/cdlreq && pip install -e . || echo "Using manual setup"
        export PYTHONPATH="/tmp/cdlreq:$PYTHONPATH"

    - name: Validate specifications
      run: |
        export PYTHONPATH="/tmp/cdlreq:$PYTHONPATH"
        python -c "import sys; sys.path.insert(0, '/tmp/cdlreq'); from cdlreq.validation import validate_specifications; result = validate_specifications('.'); sys.exit(0 if result else 1)" || exit 1

    - name: Run tests
      run: |
        pytest tests/ --tb=short -v || exit 1

    - name: Check coverage
      run: |
        export PYTHONPATH="/tmp/cdlreq:$PYTHONPATH"
        python -c "from cdlreq.cli.commands import cli; cli(['coverage', 'pytest_output.txt', '--directory', '.'])" || exit 1

  traceability-matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    needs: pr-checks
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install cdlreq
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml jsonschema click openpyxl
        git clone https://github.com/SeanHgh/cdlreq.git /tmp/cdlreq
        cd /tmp/cdlreq && pip install -e . || echo "Using manual setup"

    - name: Generate matrix
      run: |
        export PYTHONPATH="/tmp/cdlreq:$PYTHONPATH"
        python -c "from cdlreq.cli.commands import cli; cli(['export', '--directory', '.', '--output', 'requirements/traceability_matrix.xlsx'])"

    - name: Commit matrix
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add requirements/traceability_matrix.xlsx
        git diff --staged --quiet || git commit -m "Update traceability matrix"
        git push || echo "No changes to push"